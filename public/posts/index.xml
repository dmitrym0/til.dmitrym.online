<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Dmitry M - Today I learned</title>
    <link>https://til.dmitrym.online/posts/</link>
    <description>Recent content in Posts on Dmitry M - Today I learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 26 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://til.dmitrym.online/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to remove stale github workflows</title>
      <link>https://til.dmitrym.online/posts/remove-stale-github-workflows/</link>
      <pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://til.dmitrym.online/posts/remove-stale-github-workflows/</guid>
      <description>There&amp;rsquo;s a long standing Github ticket for removing stale github workflows. Turns out there&amp;rsquo;s no way to remove a workflow.
The work around here is to remove all workflow runs first.
Install github command line tool: brew install gh In the repo&amp;rsquo;s working directory do the following: 1 gh run list --workflow=stale-workflow.yml --json databaseId | jq &amp;#39;.[].databaseId&amp;#39; | xargs -I{} gh run delete {} Replace stale-workflow.yml with the appropriate workflow file name.</description>
    </item>
    
    <item>
      <title>readme-toc - generate a table of contents in markdown documents</title>
      <link>https://til.dmitrym.online/posts/readme-toc-generate-table-of-contents/</link>
      <pubDate>Tue, 16 Jan 2024 00:00:00 -0800</pubDate>
      
      <guid>https://til.dmitrym.online/posts/readme-toc-generate-table-of-contents/</guid>
      <description>readme-toc is a utility that creates a table of contents in markdown documents.
You create a placeholder for where you want the TOC to go and the utility creates the rest:
Starting with this README.md:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 # README.md &amp;lt;!-- toc --&amp;gt; &amp;lt;!-- toc stop --&amp;gt; # Installation instructions ```shell npx readme-toc ``` # Another Heading # Final heading then running:</description>
    </item>
    
    <item>
      <title>local-ssl-proxy and mkcert</title>
      <link>https://til.dmitrym.online/posts/local-ssl-proxy-and-mkcert/</link>
      <pubDate>Tue, 02 Jan 2024 00:00:00 -0800</pubDate>
      
      <guid>https://til.dmitrym.online/posts/local-ssl-proxy-and-mkcert/</guid>
      <description>Ocassionally, it&amp;rsquo;s helpful to run a local service with SSL. My particular scenario has an application that insists on redirecting everything to https even when running in development mode.
Start with by installing local-ssl-proxy:
1 npm install -g local-ssl-proxy run it like so:
1 local-ssl-proxy --source 9001 --target 9000 if you want to avoid unsightly untrusted certificate errors install mkcert:
1 2 3 brew install mkcert mkcert -install mkcert mydomainname.com Assuming that mydomainname.</description>
    </item>
    
    <item>
      <title>Stern</title>
      <link>https://til.dmitrym.online/posts/stern/</link>
      <pubDate>Mon, 13 Nov 2023 00:00:00 -0800</pubDate>
      
      <guid>https://til.dmitrym.online/posts/stern/</guid>
      <description>stern is a log tailer for k8s. Similar to tail -f but for multipe Kubernetes pods:
1 2 3 4 stern --only-log-lines \ --max-log-requests 1000 \ --namespace k8s-namesapce \ &amp;#39;pod-wildcard*&amp;#39; </description>
    </item>
    
  </channel>
</rss>
